#+FILETAGS: REFULANG

This file contains the [[http://tools.ietf.org/html/rfc5234][ABNF]] grammar for Refu

* Grammar
root = statements
statements = *statement
statement = block
          / function_declaration
          / module_signature
          / module_implementation
          / interface_declaration
          / interface_implementation
          / data_declaration
          / variable_declaration

expression = identifier
           / string_literal
           / numeric
           / if_expression
           / binary_op_expression
           / unary_op_expression

expression_list = expression
                / expression_list "," expression

binary_op = "=" "+" "*" "/" "%" ">" ">=" "<" "<=" "==" "!="
binary_op_expression = expression binary_op expression

unary_op = "&" "*" "!" "++" "--"
unary_op_expression = unary_op expression

block = "{" statements "}"

module_declaration = signature identifier block
module_implmentation = identifier "implof" identifier block

identifiers_list = identifier / identifiers_list "," identifier
generic_attributes = "<" identifiers_list ">"
generic_type = "type" / OTHERS
generic_arguments_list = identifier ":" generic_type
                       / generic_arguments_list "," identifier ":" generic_type
generic_declaration = "<" generic_arguments_list ">"

array_attributes = numeric
array_declaration = "[" array_attributes"]"

memory_attributes = array_declaration
                  / "*"
                  / "&"
                  / "ptr[~]"
                  / "ptr[@]"

type_declaration = identifier [generic_attributes]
decorated_type_declaration = [memory_attributes] type_declaration
variable_declaration = identifier ":" decorated_type_declaration

data_op_token = "," / "|" / "->"
data_op = data_desc data_op_token data_desc
data_desc = data_op
          / identifier ":" data_desc
          / identifier

data_declaration = "data" identifier [generic_declaration] "{" data_desc "}"

variable_list = variable_declaration
              / variable_list "," variable_declaration

function_declaration = "fn" identifier [generic_declaration] "(" variable_list ")" ["->" decorated_type_declaration]
function_implementation = function_declaration block
function_call = identifier [generic_attributes] "(" expression_list ")"

interface_declaration = "interface" identifier [generic_declaration] "{" 1*function_declaration"}"
interface_implementation = "implof" identifier function_implementation
