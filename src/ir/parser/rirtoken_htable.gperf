%compare-strncmp
%readonly-tables
%define lookup-function-name rir_lexer_lexeme_is_token
%define hash-function-name rir_lexer_hash
%delimiters=''
struct rinternal_token { const char *name; enum rir_token_type type; };
%%
# -- Keywords section --
# attempted to have TAB as delimiter but could not make it work
#
# keywords
globalRIR_TOK_GLOBAL
uniondefRIR_TOK_UNIONDEF
typedefRIR_TOK_TYPEDEF
fndefRIR_TOK_FNDEF
fndeclRIR_TOK_FNDECL
# branch instructions
returnRIR_TOK_RETURN
branchRIR_TOK_BRANCH
condbranchRIR_TOK_CONDBRANCH
convertRIR_TOK_CONVERT
# general instructions
writeRIR_TOK_WRITE
readRIR_TOK_READ
callRIR_TOK_CALL
#binaryop instructions
addRIR_TOK_ADD
subRIR_TOK_SUB
mulRIR_TOK_MUL
divRIR_TOK_DIV
cmpeqRIR_TOK_CMPEQ
cmpneRIR_TOK_CMPNE
cmpgtRIR_TOK_CMPGT
cmpgeRIR_TOK_CMPGE
cmpltRIR_TOK_CMPLT
cmpleRIR_TOK_CMPLE
#symbols
{RIR_TOK_SM_OCBRACE
}RIR_TOK_SM_CCBRACE
[RIR_TOK_SM_OSBRACE
]RIR_TOK_SM_CSBRACE
(RIR_TOK_SM_OPAREN
)RIR_TOK_SM_CPAREN
"\""RIR_TOK_SM_DBLQUOTE
,RIR_TOK_SM_COMMA
-RIR_TOK_OP_MINUS
*RIR_TOK_OP_MULTI
=RIR_TOK_OP_ASSIGN
;RIR_TOK_SEMICOLON
